datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  roleId    String
  role      Role      @relation(fields: [roleId], references: [id])
  vendorId  String?
  vendor    Vendor?   @relation(fields: [vendorId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  password  Password?
}

model Password {
  hash   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Role {
  id          String           @id @default(cuid())
  name        String           @unique
  users       User[]
  permissions RolePermission[]
}

model Permission {
  id    String           @id @default(cuid())
  name  String           @unique
  roles RolePermission[]
}

model RolePermission {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       String
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId String

  @@id([roleId, permissionId])
}

model Vendor {
  id          String   @id @default(cuid())
  name        String
  description String?
  address     String?
  phoneNumber String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  events      Event[]
}

model Event {
  id          String    @id @default(cuid())
  image       String
  name        String
  location    String
  description String
  status      String    @default("ongoing")
  eventStart  DateTime  @default(now())
  eventEnd    DateTime  @default(now())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  vendor      Vendor    @relation(fields: [vendorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  vendorId    String
  category    Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId  String
  featured    Boolean   @default(false)
}

model Category {
  id     String  @id @default(cuid())
  name   String  @unique
  events Event[]
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  action    String
  person    String
  createdAt DateTime @default(now())
}
